{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport { createDocumentationMessageGenerator, isPlainObject, mergeSearchParameters, noop } from \"../../lib/utils/index.js\";\n/**\n * Refine the given search parameters.\n */\n\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true\n});\n\nfunction getInitialSearchParameters(state, widgetParams) {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(Object.keys(widgetParams.searchParameters).reduce(function (acc, key) {\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, undefined));\n  }, {}));\n}\n\nvar connectConfigure = function connectConfigure() {\n  var renderFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  return function (widgetParams) {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(withUsage('The `searchParameters` option expects an object.'));\n    }\n\n    var connectorState = {};\n\n    function refine(helper) {\n      return function (searchParameters) {\n        // Merge new `searchParameters` with the ones set from other widgets\n        var actualState = getInitialSearchParameters(helper.state, widgetParams);\n        var nextSearchParameters = mergeSearchParameters(actualState, new algoliasearchHelper.SearchParameters(searchParameters)); // Update original `widgetParams.searchParameters` to the new refined one\n\n        widgetParams.searchParameters = searchParameters; // Trigger a search with the resolved search parameters\n\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      dispose: function dispose(_ref) {\n        var state = _ref.state;\n        unmountFn();\n        return getInitialSearchParameters(state, widgetParams);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        var _renderState$configur;\n\n        var widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          configure: _objectSpread(_objectSpread({}, widgetRenderState), {}, {\n            widgetParams: _objectSpread(_objectSpread({}, widgetRenderState.widgetParams), {}, {\n              searchParameters: mergeSearchParameters(new algoliasearchHelper.SearchParameters((_renderState$configur = renderState.configure) === null || _renderState$configur === void 0 ? void 0 : _renderState$configur.widgetParams.searchParameters), new algoliasearchHelper.SearchParameters(widgetRenderState.widgetParams.searchParameters)).getQueryParams()\n            })\n          })\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref2) {\n        var helper = _ref2.helper;\n\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(state, _ref3) {\n        var uiState = _ref3.uiState;\n        return mergeSearchParameters(state, new algoliasearchHelper.SearchParameters(_objectSpread(_objectSpread({}, uiState.configure), widgetParams.searchParameters)));\n      },\n      getWidgetUiState: function getWidgetUiState(uiState) {\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          configure: _objectSpread(_objectSpread({}, uiState.configure), widgetParams.searchParameters)\n        });\n      }\n    };\n  };\n};\n\nexport default connectConfigure;","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","algoliasearchHelper","createDocumentationMessageGenerator","isPlainObject","mergeSearchParameters","noop","withUsage","name","connector","getInitialSearchParameters","state","widgetParams","setQueryParameters","searchParameters","reduce","acc","undefined","connectConfigure","renderFn","unmountFn","Error","connectorState","refine","helper","actualState","nextSearchParameters","SearchParameters","setState","search","$$type","init","initOptions","instantSearchInstance","getWidgetRenderState","render","renderOptions","dispose","_ref","getRenderState","renderState","_renderState$configur","widgetRenderState","configure","getQueryParams","_ref2","getWidgetSearchParameters","_ref3","uiState","getWidgetUiState"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/instantsearch.js/es/connectors/configure/connectConfigure.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport { createDocumentationMessageGenerator, isPlainObject, mergeSearchParameters, noop } from \"../../lib/utils/index.js\";\n/**\n * Refine the given search parameters.\n */\n\nvar withUsage = createDocumentationMessageGenerator({\n  name: 'configure',\n  connector: true\n});\n\nfunction getInitialSearchParameters(state, widgetParams) {\n  // We leverage the helper internals to remove the `widgetParams` from\n  // the state. The function `setQueryParameters` omits the values that\n  // are `undefined` on the next state.\n  return state.setQueryParameters(Object.keys(widgetParams.searchParameters).reduce(function (acc, key) {\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, undefined));\n  }, {}));\n}\n\nvar connectConfigure = function connectConfigure() {\n  var renderFn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  var unmountFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n  return function (widgetParams) {\n    if (!widgetParams || !isPlainObject(widgetParams.searchParameters)) {\n      throw new Error(withUsage('The `searchParameters` option expects an object.'));\n    }\n\n    var connectorState = {};\n\n    function refine(helper) {\n      return function (searchParameters) {\n        // Merge new `searchParameters` with the ones set from other widgets\n        var actualState = getInitialSearchParameters(helper.state, widgetParams);\n        var nextSearchParameters = mergeSearchParameters(actualState, new algoliasearchHelper.SearchParameters(searchParameters)); // Update original `widgetParams.searchParameters` to the new refined one\n\n        widgetParams.searchParameters = searchParameters; // Trigger a search with the resolved search parameters\n\n        helper.setState(nextSearchParameters).search();\n      };\n    }\n\n    return {\n      $$type: 'ais.configure',\n      init: function init(initOptions) {\n        var instantSearchInstance = initOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(initOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), true);\n      },\n      render: function render(renderOptions) {\n        var instantSearchInstance = renderOptions.instantSearchInstance;\n        renderFn(_objectSpread(_objectSpread({}, this.getWidgetRenderState(renderOptions)), {}, {\n          instantSearchInstance: instantSearchInstance\n        }), false);\n      },\n      dispose: function dispose(_ref) {\n        var state = _ref.state;\n        unmountFn();\n        return getInitialSearchParameters(state, widgetParams);\n      },\n      getRenderState: function getRenderState(renderState, renderOptions) {\n        var _renderState$configur;\n\n        var widgetRenderState = this.getWidgetRenderState(renderOptions);\n        return _objectSpread(_objectSpread({}, renderState), {}, {\n          configure: _objectSpread(_objectSpread({}, widgetRenderState), {}, {\n            widgetParams: _objectSpread(_objectSpread({}, widgetRenderState.widgetParams), {}, {\n              searchParameters: mergeSearchParameters(new algoliasearchHelper.SearchParameters((_renderState$configur = renderState.configure) === null || _renderState$configur === void 0 ? void 0 : _renderState$configur.widgetParams.searchParameters), new algoliasearchHelper.SearchParameters(widgetRenderState.widgetParams.searchParameters)).getQueryParams()\n            })\n          })\n        });\n      },\n      getWidgetRenderState: function getWidgetRenderState(_ref2) {\n        var helper = _ref2.helper;\n\n        if (!connectorState.refine) {\n          connectorState.refine = refine(helper);\n        }\n\n        return {\n          refine: connectorState.refine,\n          widgetParams: widgetParams\n        };\n      },\n      getWidgetSearchParameters: function getWidgetSearchParameters(state, _ref3) {\n        var uiState = _ref3.uiState;\n        return mergeSearchParameters(state, new algoliasearchHelper.SearchParameters(_objectSpread(_objectSpread({}, uiState.configure), widgetParams.searchParameters)));\n      },\n      getWidgetUiState: function getWidgetUiState(uiState) {\n        return _objectSpread(_objectSpread({}, uiState), {}, {\n          configure: _objectSpread(_objectSpread({}, uiState.configure), widgetParams.searchParameters)\n        });\n      }\n    };\n  };\n};\n\nexport default connectConfigure;"],"mappings":"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"},"metadata":{},"sourceType":"module"}