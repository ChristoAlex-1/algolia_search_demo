{"ast":null,"code":"// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nfunction find(items, predicate) {\n  var value;\n\n  for (var i = 0; i < items.length; i++) {\n    value = items[i]; // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n\nexport default find;","map":{"version":3,"names":["find","items","predicate","value","i","length","undefined"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/instantsearch.js/es/lib/utils/find.js"],"sourcesContent":["// We aren't using the native `Array.prototype.find` because the refactor away from Lodash is not\n// published as a major version.\n// Relying on the `find` polyfill on user-land, which before was only required for niche use-cases,\n// was decided as too risky.\n// @MAJOR Replace with the native `Array.prototype.find` method\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nfunction find(items, predicate) {\n  var value;\n\n  for (var i = 0; i < items.length; i++) {\n    value = items[i]; // inlined for performance: if (Call(predicate, thisArg, [value, i, list])) {\n\n    if (predicate(value, i, items)) {\n      return value;\n    }\n  }\n\n  return undefined;\n}\n\nexport default find;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,CAAcC,KAAd,EAAqBC,SAArB,EAAgC;EAC9B,IAAIC,KAAJ;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACrCD,KAAK,GAAGF,KAAK,CAACG,CAAD,CAAb,CADqC,CACnB;;IAElB,IAAIF,SAAS,CAACC,KAAD,EAAQC,CAAR,EAAWH,KAAX,CAAb,EAAgC;MAC9B,OAAOE,KAAP;IACD;EACF;;EAED,OAAOG,SAAP;AACD;;AAED,eAAeN,IAAf"},"metadata":{},"sourceType":"module"}