{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"queryHook\"];\nimport React, { useRef, useState } from 'react';\nimport { useSearchBox } from 'react-instantsearch-hooks';\nimport { SearchBox as SearchBoxUiComponent } from \"../ui/SearchBox.js\";\nexport function SearchBox(_ref) {\n  var queryHook = _ref.queryHook,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useSearchBox = useSearchBox({\n    queryHook: queryHook\n  }, {\n    $$widgetType: 'ais.searchBox'\n  }),\n      query = _useSearchBox.query,\n      refine = _useSearchBox.refine,\n      isSearchStalled = _useSearchBox.isSearchStalled;\n\n  var _useState = useState(query),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var inputRef = useRef(null);\n\n  function setQuery(newQuery) {\n    setInputValue(newQuery);\n    refine(newQuery);\n  }\n\n  function onReset() {\n    setQuery('');\n  }\n\n  function onChange(event) {\n    setQuery(event.currentTarget.value);\n  } // Track when the InstantSearch query changes to synchronize it with\n  // the React state.\n  // We bypass the state update if the input is focused to avoid concurrent\n  // updates when typing.\n\n\n  if (query !== inputValue && document.activeElement !== inputRef.current) {\n    setInputValue(query);\n  }\n\n  var uiProps = {\n    inputRef: inputRef,\n    isSearchStalled: isSearchStalled,\n    onChange: onChange,\n    onReset: onReset,\n    value: inputValue,\n    translations: {\n      submitTitle: 'Submit the search query.',\n      resetTitle: 'Clear the search query.'\n    }\n  };\n  return /*#__PURE__*/React.createElement(SearchBoxUiComponent, _extends({}, props, uiProps));\n}","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useRef","useState","useSearchBox","SearchBox","SearchBoxUiComponent","_ref","queryHook","props","_useSearchBox","$$widgetType","query","refine","isSearchStalled","_useState","_useState2","inputValue","setInputValue","inputRef","setQuery","newQuery","onReset","onChange","event","currentTarget","value","document","activeElement","current","uiProps","translations","submitTitle","resetTitle","createElement"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/react-instantsearch-hooks-web/dist/es/widgets/SearchBox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"queryHook\"];\nimport React, { useRef, useState } from 'react';\nimport { useSearchBox } from 'react-instantsearch-hooks';\nimport { SearchBox as SearchBoxUiComponent } from \"../ui/SearchBox.js\";\nexport function SearchBox(_ref) {\n  var queryHook = _ref.queryHook,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useSearchBox = useSearchBox({\n    queryHook: queryHook\n  }, {\n    $$widgetType: 'ais.searchBox'\n  }),\n      query = _useSearchBox.query,\n      refine = _useSearchBox.refine,\n      isSearchStalled = _useSearchBox.isSearchStalled;\n\n  var _useState = useState(query),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var inputRef = useRef(null);\n\n  function setQuery(newQuery) {\n    setInputValue(newQuery);\n    refine(newQuery);\n  }\n\n  function onReset() {\n    setQuery('');\n  }\n\n  function onChange(event) {\n    setQuery(event.currentTarget.value);\n  } // Track when the InstantSearch query changes to synchronize it with\n  // the React state.\n  // We bypass the state update if the input is focused to avoid concurrent\n  // updates when typing.\n\n\n  if (query !== inputValue && document.activeElement !== inputRef.current) {\n    setInputValue(query);\n  }\n\n  var uiProps = {\n    inputRef: inputRef,\n    isSearchStalled: isSearchStalled,\n    onChange: onChange,\n    onReset: onReset,\n    value: inputValue,\n    translations: {\n      submitTitle: 'Submit the search query.',\n      resetTitle: 'Clear the search query.'\n    }\n  };\n  return /*#__PURE__*/React.createElement(SearchBoxUiComponent, _extends({}, props, uiProps));\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,IAAIC,SAAS,GAAG,CAAC,WAAD,CAAhB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,SAAS,IAAIC,oBAAtB,QAAkD,oBAAlD;AACA,OAAO,SAASD,SAAT,CAAmBE,IAAnB,EAAyB;EAC9B,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;EAAA,IACIC,KAAK,GAAGV,wBAAwB,CAACQ,IAAD,EAAOP,SAAP,CADpC;;EAGA,IAAIU,aAAa,GAAGN,YAAY,CAAC;IAC/BI,SAAS,EAAEA;EADoB,CAAD,EAE7B;IACDG,YAAY,EAAE;EADb,CAF6B,CAAhC;EAAA,IAKIC,KAAK,GAAGF,aAAa,CAACE,KAL1B;EAAA,IAMIC,MAAM,GAAGH,aAAa,CAACG,MAN3B;EAAA,IAOIC,eAAe,GAAGJ,aAAa,CAACI,eAPpC;;EASA,IAAIC,SAAS,GAAGZ,QAAQ,CAACS,KAAD,CAAxB;EAAA,IACII,UAAU,GAAGlB,cAAc,CAACiB,SAAD,EAAY,CAAZ,CAD/B;EAAA,IAEIE,UAAU,GAAGD,UAAU,CAAC,CAAD,CAF3B;EAAA,IAGIE,aAAa,GAAGF,UAAU,CAAC,CAAD,CAH9B;;EAKA,IAAIG,QAAQ,GAAGjB,MAAM,CAAC,IAAD,CAArB;;EAEA,SAASkB,QAAT,CAAkBC,QAAlB,EAA4B;IAC1BH,aAAa,CAACG,QAAD,CAAb;IACAR,MAAM,CAACQ,QAAD,CAAN;EACD;;EAED,SAASC,OAAT,GAAmB;IACjBF,QAAQ,CAAC,EAAD,CAAR;EACD;;EAED,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;IACvBJ,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;EACD,CA/B6B,CA+B5B;EACF;EACA;EACA;;;EAGA,IAAId,KAAK,KAAKK,UAAV,IAAwBU,QAAQ,CAACC,aAAT,KAA2BT,QAAQ,CAACU,OAAhE,EAAyE;IACvEX,aAAa,CAACN,KAAD,CAAb;EACD;;EAED,IAAIkB,OAAO,GAAG;IACZX,QAAQ,EAAEA,QADE;IAEZL,eAAe,EAAEA,eAFL;IAGZS,QAAQ,EAAEA,QAHE;IAIZD,OAAO,EAAEA,OAJG;IAKZI,KAAK,EAAET,UALK;IAMZc,YAAY,EAAE;MACZC,WAAW,EAAE,0BADD;MAEZC,UAAU,EAAE;IAFA;EANF,CAAd;EAWA,OAAO,aAAahC,KAAK,CAACiC,aAAN,CAAoB5B,oBAApB,EAA0CT,QAAQ,CAAC,EAAD,EAAKY,KAAL,EAAYqB,OAAZ,CAAlD,CAApB;AACD"},"metadata":{},"sourceType":"module"}