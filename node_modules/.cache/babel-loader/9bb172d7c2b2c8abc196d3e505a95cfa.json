{"ast":null,"code":"/**\n * Throws an error if the condition is not met.\n *\n * The error is exhaustive in development, and becomes generic in production.\n *\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (!(process.env.NODE_ENV !== 'production')) {\n    throw new Error('Invariant failed');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"[InstantSearch] \".concat(typeof message === 'function' ? message() : message));\n  }\n}","map":{"version":3,"names":["invariant","condition","message","process","env","NODE_ENV","Error","concat"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/react-instantsearch-hooks/dist/es/lib/invariant.js"],"sourcesContent":["/**\n * Throws an error if the condition is not met.\n *\n * The error is exhaustive in development, and becomes generic in production.\n *\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (!(process.env.NODE_ENV !== 'production')) {\n    throw new Error('Invariant failed');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"[InstantSearch] \".concat(typeof message === 'function' ? message() : message));\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,OAA9B,EAAuC;EAC5C,IAAID,SAAJ,EAAe;IACb;EACD;;EAED,IAAI,EAAEE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAJ,EAA8C;IAC5C,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;EACD;;EAED,IAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,MAAM,IAAIC,KAAJ,CAAU,mBAAmBC,MAAnB,CAA0B,OAAOL,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,EAAvC,GAA4CA,OAAtE,CAAV,CAAN;EACD;AACF"},"metadata":{},"sourceType":"module"}