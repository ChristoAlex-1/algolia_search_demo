{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { warning, serializePayload, deserializePayload } from \"../lib/utils/index.js\";\nexport function readDataAttributes(domElement) {\n  var method = domElement.getAttribute('data-insights-method');\n  var serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error('The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.');\n  }\n\n  try {\n    var payload = deserializePayload(serializedPayload);\n    return {\n      method: method,\n      payload: payload\n    };\n  } catch (error) {\n    throw new Error('The insights helper was unable to parse `data-insights-payload`.');\n  }\n}\nexport function hasDataAttributes(domElement) {\n  return domElement.hasAttribute('data-insights-method');\n}\nexport function writeDataAttributes(_ref) {\n  var method = _ref.method,\n      payload = _ref.payload;\n\n  if (_typeof(payload) !== 'object') {\n    throw new Error(\"The insights helper expects the payload to be an object.\");\n  }\n\n  var serializedPayload;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(\"Could not JSON serialize the payload object.\");\n  }\n\n  return \"data-insights-method=\\\"\".concat(method, \"\\\" data-insights-payload=\\\"\").concat(serializedPayload, \"\\\"\");\n}\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\n\nexport default function insights(method, payload) {\n  process.env.NODE_ENV === 'development' ? warning(false, \"`insights` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the `insights` middleware.\\n\\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\") : void 0;\n  return writeDataAttributes({\n    method: method,\n    payload: payload\n  });\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","warning","serializePayload","deserializePayload","readDataAttributes","domElement","method","getAttribute","serializedPayload","Error","payload","error","hasDataAttributes","hasAttribute","writeDataAttributes","_ref","concat","insights","process","env","NODE_ENV"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/instantsearch.js/es/helpers/insights.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { warning, serializePayload, deserializePayload } from \"../lib/utils/index.js\";\nexport function readDataAttributes(domElement) {\n  var method = domElement.getAttribute('data-insights-method');\n  var serializedPayload = domElement.getAttribute('data-insights-payload');\n\n  if (typeof serializedPayload !== 'string') {\n    throw new Error('The insights helper expects `data-insights-payload` to be a base64-encoded JSON string.');\n  }\n\n  try {\n    var payload = deserializePayload(serializedPayload);\n    return {\n      method: method,\n      payload: payload\n    };\n  } catch (error) {\n    throw new Error('The insights helper was unable to parse `data-insights-payload`.');\n  }\n}\nexport function hasDataAttributes(domElement) {\n  return domElement.hasAttribute('data-insights-method');\n}\nexport function writeDataAttributes(_ref) {\n  var method = _ref.method,\n      payload = _ref.payload;\n\n  if (_typeof(payload) !== 'object') {\n    throw new Error(\"The insights helper expects the payload to be an object.\");\n  }\n\n  var serializedPayload;\n\n  try {\n    serializedPayload = serializePayload(payload);\n  } catch (error) {\n    throw new Error(\"Could not JSON serialize the payload object.\");\n  }\n\n  return \"data-insights-method=\\\"\".concat(method, \"\\\" data-insights-payload=\\\"\").concat(serializedPayload, \"\\\"\");\n}\n/**\n * @deprecated This function will be still supported in 4.x releases, but not further. It is replaced by the `insights` middleware. For more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\n */\n\nexport default function insights(method, payload) {\n  process.env.NODE_ENV === 'development' ? warning(false, \"`insights` function has been deprecated. It is still supported in 4.x releases, but not further. It is replaced by the `insights` middleware.\\n\\nFor more information, visit https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/how-to/send-click-and-conversion-events-with-instantsearch/js/\") : void 0;\n  return writeDataAttributes({\n    method: method,\n    payload: payload\n  });\n}"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAAE;;EAA2B,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;IAAEH,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAO,OAAOA,GAAd;IAAoB,CAAtD;EAAyD,CAApI,MAA0I;IAAED,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;IAA+H,CAAjK;EAAoK;;EAAC,OAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1X,SAASK,OAAT,EAAkBC,gBAAlB,EAAoCC,kBAApC,QAA8D,uBAA9D;AACA,OAAO,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;EAC7C,IAAIC,MAAM,GAAGD,UAAU,CAACE,YAAX,CAAwB,sBAAxB,CAAb;EACA,IAAIC,iBAAiB,GAAGH,UAAU,CAACE,YAAX,CAAwB,uBAAxB,CAAxB;;EAEA,IAAI,OAAOC,iBAAP,KAA6B,QAAjC,EAA2C;IACzC,MAAM,IAAIC,KAAJ,CAAU,yFAAV,CAAN;EACD;;EAED,IAAI;IACF,IAAIC,OAAO,GAAGP,kBAAkB,CAACK,iBAAD,CAAhC;IACA,OAAO;MACLF,MAAM,EAAEA,MADH;MAELI,OAAO,EAAEA;IAFJ,CAAP;EAID,CAND,CAME,OAAOC,KAAP,EAAc;IACd,MAAM,IAAIF,KAAJ,CAAU,kEAAV,CAAN;EACD;AACF;AACD,OAAO,SAASG,iBAAT,CAA2BP,UAA3B,EAAuC;EAC5C,OAAOA,UAAU,CAACQ,YAAX,CAAwB,sBAAxB,CAAP;AACD;AACD,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;EACxC,IAAIT,MAAM,GAAGS,IAAI,CAACT,MAAlB;EAAA,IACII,OAAO,GAAGK,IAAI,CAACL,OADnB;;EAGA,IAAIf,OAAO,CAACe,OAAD,CAAP,KAAqB,QAAzB,EAAmC;IACjC,MAAM,IAAID,KAAJ,CAAU,0DAAV,CAAN;EACD;;EAED,IAAID,iBAAJ;;EAEA,IAAI;IACFA,iBAAiB,GAAGN,gBAAgB,CAACQ,OAAD,CAApC;EACD,CAFD,CAEE,OAAOC,KAAP,EAAc;IACd,MAAM,IAAIF,KAAJ,CAAU,8CAAV,CAAN;EACD;;EAED,OAAO,0BAA0BO,MAA1B,CAAiCV,MAAjC,EAAyC,6BAAzC,EAAwEU,MAAxE,CAA+ER,iBAA/E,EAAkG,IAAlG,CAAP;AACD;AACD;AACA;AACA;;AAEA,eAAe,SAASS,QAAT,CAAkBX,MAAlB,EAA0BI,OAA1B,EAAmC;EAChDQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCnB,OAAO,CAAC,KAAD,EAAQ,8VAAR,CAAhD,GAA0Z,KAAK,CAA/Z;EACA,OAAOa,mBAAmB,CAAC;IACzBR,MAAM,EAAEA,MADiB;IAEzBI,OAAO,EAAEA;EAFgB,CAAD,CAA1B;AAID"},"metadata":{},"sourceType":"module"}