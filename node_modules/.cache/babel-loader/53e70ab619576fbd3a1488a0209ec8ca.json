{"ast":null,"code":"import find from \"./find.js\";\nimport { unescapeFacetValue, escapeFacetValue } from \"./escapeFacetValue.js\";\n\nfunction getRefinement(state, type, attribute, name) {\n  var resultsFacets = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var res = {\n    type: type,\n    attribute: attribute,\n    name: name,\n    escapedValue: escapeFacetValue(name)\n  };\n  var facet = find(resultsFacets, function (resultsFacet) {\n    return resultsFacet.name === attribute;\n  });\n  var count;\n\n  if (type === 'hierarchical') {\n    (function () {\n      var facetDeclaration = state.getHierarchicalFacetByName(attribute);\n      var nameParts = name.split(facetDeclaration.separator);\n\n      var getFacetRefinement = function getFacetRefinement(facetData) {\n        return function (refinementKey) {\n          return facetData[refinementKey];\n        };\n      };\n\n      var _loop = function _loop(i) {\n        facet = facet && facet.data && find(Object.keys(facet.data).map(getFacetRefinement(facet.data)), function (refinement) {\n          return refinement.name === nameParts[i];\n        });\n      };\n\n      for (var i = 0; facet !== undefined && i < nameParts.length; ++i) {\n        _loop(i);\n      }\n\n      count = facet && facet.count;\n    })();\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport default function getRefinements(results, state) {\n  var includesQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var refinements = [];\n  var _state$facetsRefineme = state.facetsRefinements,\n      facetsRefinements = _state$facetsRefineme === void 0 ? {} : _state$facetsRefineme,\n      _state$facetsExcludes = state.facetsExcludes,\n      facetsExcludes = _state$facetsExcludes === void 0 ? {} : _state$facetsExcludes,\n      _state$disjunctiveFac = state.disjunctiveFacetsRefinements,\n      disjunctiveFacetsRefinements = _state$disjunctiveFac === void 0 ? {} : _state$disjunctiveFac,\n      _state$hierarchicalFa = state.hierarchicalFacetsRefinements,\n      hierarchicalFacetsRefinements = _state$hierarchicalFa === void 0 ? {} : _state$hierarchicalFa,\n      _state$numericRefinem = state.numericRefinements,\n      numericRefinements = _state$numericRefinem === void 0 ? {} : _state$numericRefinem,\n      _state$tagRefinements = state.tagRefinements,\n      tagRefinements = _state$tagRefinements === void 0 ? [] : _state$tagRefinements;\n  Object.keys(facetsRefinements).forEach(function (attribute) {\n    var refinementNames = facetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'facet', attribute, refinementName, results.facets));\n    });\n  });\n  Object.keys(facetsExcludes).forEach(function (attribute) {\n    var refinementNames = facetsExcludes[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push({\n        type: 'exclude',\n        attribute: attribute,\n        name: refinementName,\n        exclude: true\n      });\n    });\n  });\n  Object.keys(disjunctiveFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = disjunctiveFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'disjunctive', attribute, // We unescape any disjunctive refined values with `unescapeFacetValue` because\n      // they can be escaped on negative numeric values with `escapeFacetValue`.\n      unescapeFacetValue(refinementName), results.disjunctiveFacets));\n    });\n  });\n  Object.keys(hierarchicalFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = hierarchicalFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinement) {\n      refinements.push(getRefinement(state, 'hierarchical', attribute, refinement, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(numericRefinements).forEach(function (attribute) {\n    var operators = numericRefinements[attribute];\n    Object.keys(operators).forEach(function (operatorOriginal) {\n      var operator = operatorOriginal;\n      var valueOrValues = operators[operator];\n      var refinementNames = Array.isArray(valueOrValues) ? valueOrValues : [valueOrValues];\n      refinementNames.forEach(function (refinementName) {\n        refinements.push({\n          type: 'numeric',\n          attribute: attribute,\n          name: \"\".concat(refinementName),\n          numericValue: refinementName,\n          operator: operator\n        });\n      });\n    });\n  });\n  tagRefinements.forEach(function (refinementName) {\n    refinements.push({\n      type: 'tag',\n      attribute: '_tags',\n      name: refinementName\n    });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query\n    });\n  }\n\n  return refinements;\n}","map":{"version":3,"names":["find","unescapeFacetValue","escapeFacetValue","getRefinement","state","type","attribute","name","resultsFacets","arguments","length","undefined","res","escapedValue","facet","resultsFacet","count","facetDeclaration","getHierarchicalFacetByName","nameParts","split","separator","getFacetRefinement","facetData","refinementKey","_loop","i","data","Object","keys","map","refinement","exhaustive","getRefinements","results","includesQuery","refinements","_state$facetsRefineme","facetsRefinements","_state$facetsExcludes","facetsExcludes","_state$disjunctiveFac","disjunctiveFacetsRefinements","_state$hierarchicalFa","hierarchicalFacetsRefinements","_state$numericRefinem","numericRefinements","_state$tagRefinements","tagRefinements","forEach","refinementNames","refinementName","push","facets","exclude","disjunctiveFacets","hierarchicalFacets","operators","operatorOriginal","operator","valueOrValues","Array","isArray","concat","numericValue","query","trim"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/instantsearch.js/es/lib/utils/getRefinements.js"],"sourcesContent":["import find from \"./find.js\";\nimport { unescapeFacetValue, escapeFacetValue } from \"./escapeFacetValue.js\";\n\nfunction getRefinement(state, type, attribute, name) {\n  var resultsFacets = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var res = {\n    type: type,\n    attribute: attribute,\n    name: name,\n    escapedValue: escapeFacetValue(name)\n  };\n  var facet = find(resultsFacets, function (resultsFacet) {\n    return resultsFacet.name === attribute;\n  });\n  var count;\n\n  if (type === 'hierarchical') {\n    (function () {\n      var facetDeclaration = state.getHierarchicalFacetByName(attribute);\n      var nameParts = name.split(facetDeclaration.separator);\n\n      var getFacetRefinement = function getFacetRefinement(facetData) {\n        return function (refinementKey) {\n          return facetData[refinementKey];\n        };\n      };\n\n      var _loop = function _loop(i) {\n        facet = facet && facet.data && find(Object.keys(facet.data).map(getFacetRefinement(facet.data)), function (refinement) {\n          return refinement.name === nameParts[i];\n        });\n      };\n\n      for (var i = 0; facet !== undefined && i < nameParts.length; ++i) {\n        _loop(i);\n      }\n\n      count = facet && facet.count;\n    })();\n  } else {\n    count = facet && facet.data && facet.data[res.name];\n  }\n\n  if (count !== undefined) {\n    res.count = count;\n  }\n\n  if (facet && facet.exhaustive !== undefined) {\n    res.exhaustive = facet.exhaustive;\n  }\n\n  return res;\n}\n\nexport default function getRefinements(results, state) {\n  var includesQuery = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var refinements = [];\n  var _state$facetsRefineme = state.facetsRefinements,\n      facetsRefinements = _state$facetsRefineme === void 0 ? {} : _state$facetsRefineme,\n      _state$facetsExcludes = state.facetsExcludes,\n      facetsExcludes = _state$facetsExcludes === void 0 ? {} : _state$facetsExcludes,\n      _state$disjunctiveFac = state.disjunctiveFacetsRefinements,\n      disjunctiveFacetsRefinements = _state$disjunctiveFac === void 0 ? {} : _state$disjunctiveFac,\n      _state$hierarchicalFa = state.hierarchicalFacetsRefinements,\n      hierarchicalFacetsRefinements = _state$hierarchicalFa === void 0 ? {} : _state$hierarchicalFa,\n      _state$numericRefinem = state.numericRefinements,\n      numericRefinements = _state$numericRefinem === void 0 ? {} : _state$numericRefinem,\n      _state$tagRefinements = state.tagRefinements,\n      tagRefinements = _state$tagRefinements === void 0 ? [] : _state$tagRefinements;\n  Object.keys(facetsRefinements).forEach(function (attribute) {\n    var refinementNames = facetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'facet', attribute, refinementName, results.facets));\n    });\n  });\n  Object.keys(facetsExcludes).forEach(function (attribute) {\n    var refinementNames = facetsExcludes[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push({\n        type: 'exclude',\n        attribute: attribute,\n        name: refinementName,\n        exclude: true\n      });\n    });\n  });\n  Object.keys(disjunctiveFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = disjunctiveFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinementName) {\n      refinements.push(getRefinement(state, 'disjunctive', attribute, // We unescape any disjunctive refined values with `unescapeFacetValue` because\n      // they can be escaped on negative numeric values with `escapeFacetValue`.\n      unescapeFacetValue(refinementName), results.disjunctiveFacets));\n    });\n  });\n  Object.keys(hierarchicalFacetsRefinements).forEach(function (attribute) {\n    var refinementNames = hierarchicalFacetsRefinements[attribute];\n    refinementNames.forEach(function (refinement) {\n      refinements.push(getRefinement(state, 'hierarchical', attribute, refinement, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(numericRefinements).forEach(function (attribute) {\n    var operators = numericRefinements[attribute];\n    Object.keys(operators).forEach(function (operatorOriginal) {\n      var operator = operatorOriginal;\n      var valueOrValues = operators[operator];\n      var refinementNames = Array.isArray(valueOrValues) ? valueOrValues : [valueOrValues];\n      refinementNames.forEach(function (refinementName) {\n        refinements.push({\n          type: 'numeric',\n          attribute: attribute,\n          name: \"\".concat(refinementName),\n          numericValue: refinementName,\n          operator: operator\n        });\n      });\n    });\n  });\n  tagRefinements.forEach(function (refinementName) {\n    refinements.push({\n      type: 'tag',\n      attribute: '_tags',\n      name: refinementName\n    });\n  });\n\n  if (includesQuery && state.query && state.query.trim()) {\n    refinements.push({\n      attribute: 'query',\n      type: 'query',\n      name: state.query,\n      query: state.query\n    });\n  }\n\n  return refinements;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}