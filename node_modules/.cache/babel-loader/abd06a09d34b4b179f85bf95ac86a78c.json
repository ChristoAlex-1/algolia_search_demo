{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * @jest-environment jsdom\n */\n\n\nimport { serializePayload } from \"./serializer.js\";\n\nfunction chunk(arr) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n\n  for (var i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n\n  return chunks;\n}\n\nvar buildPayloads = function buildPayloads(_ref) {\n  var index = _ref.index,\n      widgetType = _ref.widgetType,\n      methodName = _ref.methodName,\n      args = _ref.args,\n      isSearchStalled = _ref.isSearchStalled; // when there's only one argument, that means it's custom\n\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return [args[0]];\n  }\n\n  var eventType = args[0];\n  var hits = args[1];\n  var eventName = args[2];\n\n  if (!hits) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass hit or hits as the second argument like:\\n  \".concat(methodName, \"(eventType, hit);\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass eventName as the third argument for 'click' or 'conversion' events like:\\n  \".concat(methodName, \"('click', hit, 'Product Purchased');\\n\\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  var hitsArray = Array.isArray(hits) ? removeEscapedFromHits(hits) : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n\n  var queryID = hitsArray[0].__queryID;\n  var hitsChunks = chunk(hitsArray);\n  var objectIDsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.objectID;\n    });\n  });\n  var positionsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.__position;\n    });\n  });\n\n  if (eventType === 'view') {\n    if (isSearchStalled) {\n      return [];\n    }\n\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index: index,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"eventType(\\\"\".concat(eventType, \"\\\") is not supported.\\n    If you want to send a custom payload, you can pass one object: \").concat(methodName, \"(customPayload);\\n    \"));\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits) {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits(_ref2) {\n  var instantSearchInstance = _ref2.instantSearchInstance,\n      index = _ref2.index,\n      widgetType = _ref2.widgetType;\n\n  var sendEventForHits = function sendEventForHits() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'sendEvent',\n      args: args,\n      isSearchStalled: instantSearchInstance._isSearchStalled\n    });\n    payloads.forEach(function (payload) {\n      return instantSearchInstance.sendEventToInsights(payload);\n    });\n  };\n\n  return sendEventForHits;\n}\nexport function createBindEventForHits(_ref3) {\n  var index = _ref3.index,\n      widgetType = _ref3.widgetType;\n\n  var bindEventForHits = function bindEventForHits() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'bindEvent',\n      args: args,\n      isSearchStalled: false\n    });\n    return payloads.length ? \"data-insights-event=\".concat(serializePayload(payloads)) : '';\n  };\n\n  return bindEventForHits;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","serializePayload","chunk","arr","chunkSize","arguments","length","undefined","chunks","i","Math","ceil","push","slice","buildPayloads","_ref","index","widgetType","methodName","args","isSearchStalled","eventType","hits","eventName","process","env","NODE_ENV","Error","concat","hitsArray","Array","isArray","removeEscapedFromHits","queryID","__queryID","hitsChunks","objectIDsByChunk","map","batch","hit","objectID","positionsByChunk","__position","insightsMethod","payload","objectIDs","positions","createSendEventForHits","_ref2","instantSearchInstance","sendEventForHits","_len","_key","payloads","_isSearchStalled","forEach","sendEventToInsights","createBindEventForHits","_ref3","bindEventForHits","_len2","_key2"],"sources":["/Users/christoalex/Algolia/my-app/node_modules/instantsearch.js/es/lib/utils/createSendEventForHits.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @jest-environment jsdom\n */\nimport { serializePayload } from \"./serializer.js\";\n\nfunction chunk(arr) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n\n  for (var i = 0; i < Math.ceil(arr.length / chunkSize); i++) {\n    chunks.push(arr.slice(i * chunkSize, (i + 1) * chunkSize));\n  }\n\n  return chunks;\n}\n\nvar buildPayloads = function buildPayloads(_ref) {\n  var index = _ref.index,\n      widgetType = _ref.widgetType,\n      methodName = _ref.methodName,\n      args = _ref.args,\n      isSearchStalled = _ref.isSearchStalled;\n\n  // when there's only one argument, that means it's custom\n  if (args.length === 1 && _typeof(args[0]) === 'object') {\n    return [args[0]];\n  }\n\n  var eventType = args[0];\n  var hits = args[1];\n  var eventName = args[2];\n\n  if (!hits) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass hit or hits as the second argument like:\\n  \".concat(methodName, \"(eventType, hit);\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  if ((eventType === 'click' || eventType === 'conversion') && !eventName) {\n    if (process.env.NODE_ENV === 'development') {\n      throw new Error(\"You need to pass eventName as the third argument for 'click' or 'conversion' events like:\\n  \".concat(methodName, \"('click', hit, 'Product Purchased');\\n\\n  To learn more about event naming: https://www.algolia.com/doc/guides/getting-insights-and-analytics/search-analytics/click-through-and-conversions/in-depth/clicks-conversions-best-practices/\\n  \"));\n    } else {\n      return [];\n    }\n  }\n\n  var hitsArray = Array.isArray(hits) ? removeEscapedFromHits(hits) : [hits];\n\n  if (hitsArray.length === 0) {\n    return [];\n  }\n\n  var queryID = hitsArray[0].__queryID;\n  var hitsChunks = chunk(hitsArray);\n  var objectIDsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.objectID;\n    });\n  });\n  var positionsByChunk = hitsChunks.map(function (batch) {\n    return batch.map(function (hit) {\n      return hit.__position;\n    });\n  });\n\n  if (eventType === 'view') {\n    if (isSearchStalled) {\n      return [];\n    }\n\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'viewedObjectIDs',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName || 'Hits Viewed',\n          index: index,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'click') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'clickedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i],\n          positions: positionsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (eventType === 'conversion') {\n    return hitsChunks.map(function (batch, i) {\n      return {\n        insightsMethod: 'convertedObjectIDsAfterSearch',\n        widgetType: widgetType,\n        eventType: eventType,\n        payload: {\n          eventName: eventName,\n          index: index,\n          queryID: queryID,\n          objectIDs: objectIDsByChunk[i]\n        },\n        hits: batch\n      };\n    });\n  } else if (process.env.NODE_ENV === 'development') {\n    throw new Error(\"eventType(\\\"\".concat(eventType, \"\\\") is not supported.\\n    If you want to send a custom payload, you can pass one object: \").concat(methodName, \"(customPayload);\\n    \"));\n  } else {\n    return [];\n  }\n};\n\nfunction removeEscapedFromHits(hits) {\n  // remove `hits.__escaped` without mutating\n  return hits.slice();\n}\n\nexport function createSendEventForHits(_ref2) {\n  var instantSearchInstance = _ref2.instantSearchInstance,\n      index = _ref2.index,\n      widgetType = _ref2.widgetType;\n\n  var sendEventForHits = function sendEventForHits() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'sendEvent',\n      args: args,\n      isSearchStalled: instantSearchInstance._isSearchStalled\n    });\n    payloads.forEach(function (payload) {\n      return instantSearchInstance.sendEventToInsights(payload);\n    });\n  };\n\n  return sendEventForHits;\n}\nexport function createBindEventForHits(_ref3) {\n  var index = _ref3.index,\n      widgetType = _ref3.widgetType;\n\n  var bindEventForHits = function bindEventForHits() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var payloads = buildPayloads({\n      widgetType: widgetType,\n      index: index,\n      methodName: 'bindEvent',\n      args: args,\n      isSearchStalled: false\n    });\n    return payloads.length ? \"data-insights-event=\".concat(serializePayload(payloads)) : '';\n  };\n\n  return bindEventForHits;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}